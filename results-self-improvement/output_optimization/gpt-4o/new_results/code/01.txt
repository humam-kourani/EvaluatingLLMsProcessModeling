from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Define the activities
receive_inquiry = gen.activity('Receive customer inquiry')
collect_information = gen.activity('Collect customer information')
address_concerns = gen.activity('Address customer concerns or questions')
guide_selection = gen.activity('Guide customer in selecting product/service')
provide_quote = gen.activity('Provide quote')
place_order = gen.activity('Place order')
record_order = gen.activity('Record order in system')
send_confirmation = gen.activity('Send order confirmation to customer')

# Parallel part for collecting information and addressing concerns
parallel_info_concerns = gen.partial_order(dependencies=[(collect_information,), (address_concerns,)])

# Sequential dependencies for guiding the customer, providing a quote, followed by placing, recording orders, and sending confirmation
steps_sequence = gen.partial_order(dependencies=[
    (guide_selection, provide_quote),
    (provide_quote, place_order),
    (place_order, record_order),
    (record_order, send_confirmation)
])

# Combine all steps into the final model
final_model = gen.partial_order(dependencies=[
    (receive_inquiry, parallel_info_concerns),
    (parallel_info_concerns, steps_sequence)
])