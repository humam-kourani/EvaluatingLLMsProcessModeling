from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Define activities
define_objectives = gen.activity('Define campaign objectives')
create_content = gen.activity('Create content')
design_visuals = gen.activity('Design visuals')
select_channels = gen.activity('Select promotion channels')
launch_campaign = gen.activity('Launch campaign')
track_performance = gen.activity('Track performance in real-time')
collect_leads = gen.activity('Collect leads in CRM system')
sales_follow_up = gen.activity('Sales teams follows up on leads')
campaign_ends = gen.activity('Campaign period ends')
analyze_performance = gen.activity('Analyze performance for future optimization')

# Model the concurrent preparation steps
prepare_campaign = gen.partial_order(dependencies=[(define_objectives,), (create_content,), (design_visuals,), (select_channels,)])

# Model the rest of the process
campaign_flow = gen.partial_order(dependencies=[
    (prepare_campaign, launch_campaign),
    (launch_campaign, track_performance),
    (launch_campaign, collect_leads),
    (collect_leads, sales_follow_up),
    (track_performance, campaign_ends),
    (sales_follow_up, campaign_ends),
    (campaign_ends, analyze_performance)
])

# Final model
final_model = campaign_flow