from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Base activities
report_incident = gen.activity('Report incident')
log_report = gen.activity('Log report into tracking system')
assign_report = gen.activity('Assign report to appropriate team')
gather_info = gen.activity('Gather necessary information')
identify_cause = gen.activity('Identify cause of incident')
propose_actions = gen.activity('Propose corrective actions')
implement_fix = gen.activity('Implement fix')
conduct_training = gen.activity('Conduct training')
change_policy = gen.activity('Change policy')
follow_up = gen.activity('Conduct follow-up')
notify_stakeholders = gen.activity('Notify all stakeholders')
close_report = gen.activity('Close incident report')

# Corrective actions (multiple possible actions)
fix_option = gen.activity('Implement fix')
training_option = gen.activity('Conduct training')
policy_option = gen.activity('Change policy')

# Exclusive choice for corrective actions
corrective_actions = gen.xor(fix_option, training_option, policy_option)

# Main process steps in partial order
poset_main_process = gen.partial_order(dependencies=[
    (report_incident, log_report),
    (log_report, assign_report),
    (assign_report, gather_info),
    (gather_info, identify_cause),
    (identify_cause, propose_actions),
    (propose_actions, corrective_actions),
    (propose_actions, notify_stakeholders),  # Notify stakeholders additionally at this point
    (corrective_actions, follow_up),
    (follow_up, close_report),
    (close_report, notify_stakeholders)
])

# Final model
final_model = poset_main_process