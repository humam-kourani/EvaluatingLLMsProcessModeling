from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
file_complaint = gen.activity('File complaint')
log_complaint = gen.activity('Log complaint')
assign_complaint = gen.activity('Assign complaint to relevant department')
review_complaint = gen.activity('Review complaint details')
approve_notify = gen.activity('Approve and notify customer')
reject_notify = gen.activity('Reject and notify customer')
process_reimbursement = gen.activity('Process reimbursement')
resolve_complaint = gen.activity('Resolve complaint')
provide_feedback = gen.activity('Provide feedback')


# Subprocesses
initial_logging = gen.partial_order(dependencies=[(file_complaint, log_complaint), (log_complaint, assign_complaint.copy())]) 
complaint_review = gen.partial_order(dependencies=[(assign_complaint.copy(), review_complaint)]) 

decision_making = gen.xor(approve_notify.copy(), reject_notify.copy()) 
refund_process = gen.partial_order(dependencies=[(approve_notify.copy(), process_reimbursement), (process_reimbursement, resolve_complaint.copy())]) 
reject_process = gen.partial_order(dependencies=[(reject_notify.copy(), resolve_complaint.copy())]) 
resolution_process = gen.xor(refund_process, reject_process)

# Combine subprocesses
main_process = gen.partial_order(dependencies=[(initial_logging, complaint_review), (complaint_review, decision_making), (decision_making, resolution_process), (resolution_process, provide_feedback)])


final_model = main_process