from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
guest_calls = gen.activity("Guest calls room service")
manager_takes_order = gen.activity("Manager takes down the order")
manager_submits_ticket = gen.activity("Manager submits order ticket to kitchen")
manager_gives_order_sommelier = gen.activity("Manager gives order to sommelier")
manager_assigns_waiter = gen.activity("Manager assigns order to waiter")
kitchen_prepares = gen.activity("Kitchen prepares food")
sommelier_fetches = gen.activity("Sommelier fetches wine and prepare alcoholic beverages")
waiter_prepares_drinks = gen.activity("Waiter prepares nonalcoholic drinks")
waiter_readies_cart = gen.activity("Waiter readies cart")
waiter_delivers = gen.activity("Waiter delivers order to guest's room")
waiter_returns = gen.activity("Waiter returns to room-service station")
waiter_debits = gen.activity("Waiter debits guest's account")
waiter_waits = gen.activity("Waiter waits/delays debiting")


# Submodels
sommelier_path = gen.xor(sommelier_fetches, None)  # 80% chance of sommelier task

preparation_phase = gen.partial_order(dependencies=[
    (manager_submits_ticket, kitchen_prepares.copy()),  # Create a copy to avoid reuse
    (manager_gives_order_sommelier, sommelier_path.copy()), # Create a copy to avoid reuse
    (manager_assigns_waiter, waiter_readies_cart.copy()), # Create a copy to avoid reuse
    (manager_assigns_waiter, waiter_prepares_drinks.copy()) # Create a copy to avoid reuse
])

delivery_phase = gen.partial_order(dependencies=[
    (kitchen_prepares.copy(), waiter_delivers),  # Create a copy to avoid reuse
    (sommelier_path.copy(), waiter_delivers), # Create a copy to avoid reuse
    (waiter_readies_cart.copy(), waiter_delivers), # Create a copy to avoid reuse
    (waiter_prepares_drinks.copy(), waiter_delivers), # Create a copy to avoid reuse
    (waiter_delivers, waiter_returns)
])

billing_phase = gen.xor(waiter_debits, gen.loop(do=waiter_waits, redo=None))


final_model = gen.partial_order(dependencies=[
    (guest_calls, manager_takes_order),
    (manager_takes_order, preparation_phase),
    (preparation_phase, delivery_phase),
    (delivery_phase, billing_phase)
])