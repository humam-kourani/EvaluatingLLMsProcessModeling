from utils.model_generation import ModelGenerator

gen = ModelGenerator()

identify_need = gen.activity('Identify need for new supplier or vendor')
issue_rfp = gen.activity('Issue request for proposals (RFP)')
receive_proposals = gen.activity('Receive supplier proposals')
evaluate_proposal = gen.activity('Evaluate proposal')
conduct_site_visit = gen.xor(gen.activity('Conduct site visit'), None)
conduct_interview = gen.xor(gen.activity('Conduct interview'), None)
select_supplier = gen.activity('Select supplier')
begin_contract_negotiations = gen.activity('Begin contract negotiations')
sign_contract = gen.activity('Sign contract')
onboard_supplier = gen.activity('Onboard supplier')
execute_contract = gen.activity('Execute contract')


evaluation_process = gen.partial_order(dependencies=[(evaluate_proposal,), (conduct_site_visit,), (conduct_interview,)])

# Combine all activities into the final model
final_model = gen.partial_order(
    dependencies=[
        (identify_need, issue_rfp),
        (issue_rfp, receive_proposals),
        (receive_proposals, evaluation_process),
        (evaluation_process, select_supplier),
        (select_supplier, begin_contract_negotiations),
        (begin_contract_negotiations, sign_contract),
        (sign_contract, onboard_supplier),
        (onboard_supplier, execute_contract)
    ]
)