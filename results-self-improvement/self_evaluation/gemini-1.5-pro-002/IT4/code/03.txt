from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
check_inventory = gen.activity('Check current inventory level')
send_automated_alert = gen.activity('Send an automated alert')
send_manual_alert = gen.activity('Send a manual alert')
place_order = gen.activity('Place order with suppliers')
update_inventory_system = gen.activity('Update inventory system with expected delivery dates')
receive_stock = gen.activity('Receive stock')
inspect_stock = gen.activity('Inspect stock for quality')
record_stock = gen.activity('Record stock in system')
place_on_shelves = gen.activity('Place stock on shelves')
place_in_storage = gen.activity('Place stock in storage')
update_inventory_levels = gen.activity('Update inventory levels')


# Trigger reorder
reorder_trigger = gen.xor(send_automated_alert, send_manual_alert)

# Shelving or Storage
shelving_storage = gen.xor(place_on_shelves, place_in_storage)


# Main process flow
final_model = gen.partial_order(dependencies=[
    (check_inventory, reorder_trigger),
    (reorder_trigger, place_order),
    (place_order, update_inventory_system),
    (update_inventory_system, receive_stock),
    (receive_stock, inspect_stock),
    (inspect_stock, record_stock),
    (record_stock, shelving_storage),
    (shelving_storage, update_inventory_levels)
])