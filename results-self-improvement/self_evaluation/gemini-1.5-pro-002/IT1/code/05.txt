from utils.model_generation import ModelGenerator

gen = ModelGenerator()

identify_need = gen.activity('Identify need for new supplier or vendor')
issue_rfp = gen.activity('Issue request for proposals (RFP)')
receive_proposals = gen.activity('Receive supplier proposals')
evaluate_proposal = gen.activity('Evaluate proposal')
conduct_interview = gen.activity('Conduct interview')
conduct_site_visit = gen.activity('Conduct site visit')
select_supplier = gen.activity('Select supplier')
begin_contract_negotiations = gen.activity('Begin contract negotiations')
sign_contract = gen.activity('Sign contract')
onboard_supplier = gen.activity('Onboard supplier')
execute_contract = gen.activity('Execute contract')


optional_interview = gen.xor(conduct_interview, None)
optional_site_visit = gen.xor(conduct_site_visit, None)

evaluation_process = gen.partial_order(dependencies=[(evaluate_proposal, ), (optional_interview, ), (optional_site_visit, )])

proposal_handling = gen.loop(do=evaluation_process, redo=None) # To handle multiple proposals

pre_negotiation_phase = gen.partial_order(dependencies=[(issue_rfp, receive_proposals), (receive_proposals, proposal_handling), (proposal_handling, select_supplier)])

negotiation_phase = gen.partial_order(dependencies=[(begin_contract_negotiations, sign_contract)])

post_negotiation_phase = gen.partial_order(dependencies=[(onboard_supplier, execute_contract)])


final_model = gen.partial_order(dependencies=[(identify_need, pre_negotiation_phase), (pre_negotiation_phase, negotiation_phase), (negotiation_phase, post_negotiation_phase)])