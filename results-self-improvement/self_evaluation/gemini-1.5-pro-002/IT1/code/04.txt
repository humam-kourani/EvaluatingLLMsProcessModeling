from utils.model_generation import ModelGenerator

gen = ModelGenerator()

define_objectives = gen.activity('Define campaign objectives')
create_content = gen.activity('Create content')
design_visuals = gen.activity('Design visuals')
select_channels = gen.activity('Select promotion channels')
launch_campaign = gen.activity('Launch campaign')
track_performance = gen.activity('Track performance in real-time')
collect_leads = gen.activity('Collect leads in CRM system')
sales_follow_up = gen.activity('Sales teams follows up on leads')
campaign_ends = gen.activity('Campaign period ends')
analyze_performance = gen.activity('Analyze performance for future optimization')


content_visuals_channels = gen.partial_order(dependencies=[(create_content,), (design_visuals,), (select_channels,)])

launch_track_collect = gen.partial_order(dependencies=[(launch_campaign, track_performance), (track_performance, collect_leads)])

# Fix: create a copy of collect_leads to avoid reusing the same node
collect_leads_copy = collect_leads.copy()
collect_follow_up = gen.partial_order(dependencies=[(collect_leads_copy, sales_follow_up)])



final_model = gen.partial_order(dependencies=[
    (define_objectives, content_visuals_channels),
    (content_visuals_channels, launch_track_collect),
    (launch_track_collect, collect_follow_up),
    (collect_follow_up, campaign_ends),
    (campaign_ends, analyze_performance)])