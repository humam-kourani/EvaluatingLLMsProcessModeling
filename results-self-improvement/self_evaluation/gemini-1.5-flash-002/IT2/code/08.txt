from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
report_incident = gen.activity('Report incident')
log_report = gen.activity('Log report into tracking system')
assign_report = gen.activity('Assign report to appropriate team')
gather_info = gen.activity('Gather necessary information')
identify_cause = gen.activity('Identify cause of incident')
propose_corrective_actions = gen.activity('Propose corrective actions')
implement_fix = gen.activity('Implement fix')
conduct_training = gen.activity('Conduct training')
change_policy = gen.activity('Change policy')
conduct_followup = gen.activity('Conduct follow-up')
close_report = gen.activity('Close incident report')
notify_stakeholders = gen.activity('Notify all stakeholders')


# Partial order for solution implementation (exclusive choice)
solution_implementation = gen.xor(implement_fix, conduct_training, change_policy)

# Partial order for main process flow
main_process = gen.partial_order(dependencies=[
    (report_incident, log_report),
    (log_report, assign_report),
    (assign_report, gather_info),
    (gather_info, identify_cause),
    (identify_cause, propose_corrective_actions),
    (propose_corrective_actions, solution_implementation),
    (solution_implementation, conduct_followup),
    (conduct_followup, close_report),
    (close_report, notify_stakeholders)
])

final_model = main_process