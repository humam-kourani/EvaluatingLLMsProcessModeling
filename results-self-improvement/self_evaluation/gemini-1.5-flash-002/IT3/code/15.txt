from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
schedule_audit = gen.activity('Schedule compliance audit')
prepare_docs = gen.activity('Prepare documentation')
gather_evidence = gen.activity('Gather evidence')
self_assessment = gen.activity('Conduct self-assessment')
external_audit = gen.activity('Conduct external audit')
identify_gaps_1 = gen.activity('Identify gaps or issues')
make_corrections_1 = gen.activity('Make necessary corrections or improvements')
final_audit_1 = gen.activity('Conduct final audit')
award_cert = gen.activity('Award certification')
issue_docs = gen.activity('Issue official documents')

identify_gaps_2 = gen.activity('Identify gaps or issues')  #copy to avoid reuse
make_corrections_2 = gen.activity('Make necessary corrections or improvements') #copy to avoid reuse
final_audit_2 = gen.activity('Conduct final audit') #copy to avoid reuse


# Partial Order for Internal Preparation
internal_prep = gen.partial_order(dependencies=[(prepare_docs,), (gather_evidence,), (self_assessment,)])

# Partial Order for Audit and Corrections. Avoid reusing submodels
audit_correction_1 = gen.partial_order(dependencies=[(external_audit, identify_gaps_1)])
audit_correction_2 = gen.partial_order(dependencies=[(identify_gaps_2, make_corrections_1)])
audit_correction_3 = gen.partial_order(dependencies=[(make_corrections_2, final_audit_1)])

#Combine Audit and correction partial orders. Avoid reusing submodels
audit_correction_combined1 = gen.partial_order(dependencies=[(audit_correction_1, audit_correction_2)])
audit_correction_combined2 = gen.partial_order(dependencies=[(audit_correction_combined1, audit_correction_3)])

audit_correction = audit_correction_combined2


# Main process flow. Avoid reusing submodels
final_model = gen.partial_order(dependencies=[(schedule_audit, internal_prep), (internal_prep, audit_correction), (final_audit_2, award_cert), (award_cert, issue_docs)])