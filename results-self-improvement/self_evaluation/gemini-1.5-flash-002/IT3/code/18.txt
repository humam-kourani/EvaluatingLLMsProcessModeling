from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
submit_application = gen.activity('Submit application online')
review_application = gen.activity('Review application and documents')
notify_missing = gen.activity('Notify applicant of missing documents')
evaluate_application = gen.activity('Evaluate application by admissions committee')
process_fees = gen.activity('Process fees or waivers')
send_acceptance = gen.activity('Send acceptance letter')
send_rejection = gen.activity('Send rejection letter')
confirm_enrollment = gen.activity('Confirm enrollment')
cancel_application = gen.activity('Cancel application')
send_orientation = gen.activity('Send orientation materials')
setup_it_accounts = gen.activity('Set up IT accounts')
assist_visa = gen.activity('Assist with visa processing')
obtain_id = gen.activity('Obtain student ID card')
meet_advisor = gen.activity('Meet with academic advisor')
select_courses = gen.activity('Select courses')
resolve_conflicts = gen.activity('Resolve schedule conflicts')
begin_attending = gen.activity('Begin attending classes')
add_drop_courses = gen.activity('Add/drop courses')
post_grades = gen.activity('Post grades')
review_grades = gen.activity('Review grades online')
submit_appeal = gen.activity('Submit appeal form')
meet_appeals = gen.activity('Meet with appeals committee')
await_decision = gen.activity('Await decision')
graduate = gen.activity('Graduate')
withdraw = gen.activity('Withdraw')


# Subprocesses
missing_docs_subprocess = gen.partial_order(dependencies=[(notify_missing,)])
application_evaluation_subprocess = gen.partial_order(dependencies=[(evaluate_application,), (process_fees,)])
acceptance_subprocess = gen.partial_order(dependencies=[(send_acceptance.copy(),), (send_orientation.copy(),), (setup_it_accounts.copy(),)])
international_student_subprocess = gen.xor(assist_visa, None)
study_plan_subprocess = gen.partial_order(dependencies=[(meet_advisor,), (select_courses,), (resolve_conflicts,)])
id_card_subprocess = gen.partial_order(dependencies=[(obtain_id,), (study_plan_subprocess,)])
post_semester_subprocess = gen.partial_order(dependencies=[(post_grades,), (review_grades,)])
appeal_subprocess = gen.partial_order(dependencies=[(submit_appeal,), (meet_appeals,), (await_decision,)])

# Main process
application_review = gen.xor(missing_docs_subprocess, application_evaluation_subprocess)
post_application_review = gen.partial_order(dependencies=[(application_review, send_acceptance.copy()), (application_review, send_rejection.copy())])
enrollment_confirmation = gen.xor(confirm_enrollment, cancel_application)
main_process_body = gen.partial_order(dependencies=[(post_application_review, enrollment_confirmation)])
#Corrected this section to avoid reuse of enrollment_confirmation
main_process_after_enrollment = gen.partial_order(dependencies=[(enrollment_confirmation.copy(), id_card_subprocess), (id_card_subprocess, begin_attending), (begin_attending, add_drop_courses)])
main_process_after_enrollment_intl = gen.partial_order(dependencies=[(main_process_after_enrollment, international_student_subprocess)])
semester_loop = gen.loop(do=main_process_after_enrollment_intl, redo=post_semester_subprocess)
final_process = gen.partial_order(dependencies=[(submit_application, review_application), (review_application, main_process_body), (semester_loop, graduate), (semester_loop, withdraw)])


final_model = final_process