from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Initial steps
customer_places_order_online = gen.activity('Customer places order online')
customer_places_order_over_the_phone = gen.activity('Customer places order over the phone')
order_placement = gen.xor(customer_places_order_online, customer_places_order_over_the_phone)
generate_and_send_order_confirmation = gen.activity('Generate and send order confirmation')

# Processing and Shipping
pick_and_pack_items = gen.activity('Pick and pack items')
generate_shipping_label = gen.activity('Generate shipping label')
hand_over_order_to_logistics_provider = gen.activity('Hand over order to logistics provider')
send_tracking_information_to_customer = gen.activity('Send tracking information to customer')

# Delivery and Follow-up
successful_delivery = gen.activity('Successful delivery')
monitor_shipment = gen.activity('Monitor shipment')
process_customer_feedback_or_returns = gen.activity('Process customer feedback or returns')
optional_feedback_or_returns = gen.xor(process_customer_feedback_or_returns, None)


# Combine sub-processes
processing_and_shipping = gen.partial_order(dependencies=[
    (pick_and_pack_items, generate_shipping_label),
    (generate_shipping_label, hand_over_order_to_logistics_provider),
    (hand_over_order_to_logistics_provider, send_tracking_information_to_customer)])

delivery_and_followup = gen.partial_order(dependencies=[
    (monitor_shipment, successful_delivery),
    (successful_delivery, optional_feedback_or_returns)
])


final_model = gen.partial_order(dependencies=[
    (order_placement, generate_and_send_order_confirmation),
    (generate_and_send_order_confirmation, processing_and_shipping),
    (processing_and_shipping, delivery_and_followup)])