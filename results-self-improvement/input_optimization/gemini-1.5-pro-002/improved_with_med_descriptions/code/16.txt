from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Initial activities
send_notification = gen.activity('Send notification')
prepare_financial_statements = gen.activity('Prepare financial statements')
gather_necessary_documents = gen.activity('Gather necessary documents')
check_regulatory_updates = gen.activity('Check regulatory updates')

# Document submission
submit_documents = gen.activity('Submit documents')

# Review and clarification
review_submission = gen.activity('Review submission')
request_clarifications = gen.activity('Request clarifications of discrepancies')
receive_clarifications = gen.activity('Receive clarifications')

# Risk assessment
evaluate_financial_risks = gen.activity('Evaluate financial risks')
evaluate_operational_risks = gen.activity('Evaluate operational risks')
evaluate_compliance_risks = gen.activity('Evaluate compliance risks')
complete_risk_assessment = gen.activity('Complete risk assessment/mitigation')

# Detailed investigation
launch_detailed_investigation = gen.activity('Launch detailed investigation')
conduct_data_analysis = gen.activity('Conduct data analysis')
conduct_interviews = gen.activity('Conduct interviews')
perform_site_visits = gen.activity('Perform site visits')
skip_detailed_investigation = None  # For the exclusive choice

# Report compilation and review
compile_audit_report = gen.activity('Compile audit report')
review_report_by_audit_director = gen.activity('Review report by audit director')
approve_report = gen.activity('Approve report')
send_report_for_revision = gen.activity('Send report for revision')
update_and_resubmit_report = gen.activity('Update and resubmit report')

# Finalization
distribute_final_report = gen.activity('Distribute final report')
archive_report = gen.activity('Archive report')
close_audit_process = gen.activity('Close audit process')


# Sub-models

# Concurrent document preparation and regulatory check
prepare_and_check = gen.partial_order(dependencies=[(prepare_financial_statements,),
                                                    (gather_necessary_documents,), (check_regulatory_updates,)])



# Clarification loop
clarification_loop = gen.loop(do=request_clarifications, redo=receive_clarifications)


# Risk assessment (concurrent activities)

risk_assessment = gen.partial_order(dependencies=[(evaluate_financial_risks,), (evaluate_operational_risks,), (evaluate_compliance_risks,)])

risk_assessment_complete = gen.partial_order([(risk_assessment, complete_risk_assessment)])




# Detailed investigation (optional and with conditional site visits)
optional_site_visits = gen.xor(perform_site_visits, None)
detailed_investigation_activities = gen.partial_order(dependencies=[(conduct_data_analysis,), (conduct_interviews,), (optional_site_visits,)])
detailed_investigation = gen.xor(detailed_investigation_activities, skip_detailed_investigation)  # Use detailed_investigation_activities



# Review and revision loop
review_revision_loop = gen.loop(do=review_report_by_audit_director, redo=update_and_resubmit_report)


# Report finalization
finalize_report = gen.partial_order(dependencies=[(distribute_final_report,), (archive_report,)])



# Main process model

main_process = gen.partial_order(
    dependencies=[
        (send_notification, prepare_and_check),
        (prepare_and_check, submit_documents), # submit_documents is moved here
        (submit_documents, review_submission),
        (review_submission, clarification_loop),
        (clarification_loop, risk_assessment_complete),
        (risk_assessment_complete, detailed_investigation),
        (detailed_investigation, compile_audit_report),
        (compile_audit_report, review_revision_loop),
        (review_revision_loop, finalize_report),
        (finalize_report, close_audit_process)
    ]
)


final_model = main_process