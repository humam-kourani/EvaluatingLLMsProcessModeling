from utils.model_generation import ModelGenerator

gen = ModelGenerator()

report_incident = gen.activity('Report incident')
log_report = gen.activity('Log report into tracking system')
assign_report = gen.activity('Assign report to appropriate team')
identify_cause = gen.activity('Identify cause of incident')
propose_corrective_actions = gen.activity('Propose corrective actions')
implement_fix = gen.activity('Implement fix')
conduct_follow_up = gen.activity('Conduct follow-up')
close_incident_report = gen.activity('Close incident report')
notify_stakeholders = gen.activity('Notify all stakeholders')

# Corrective actions can include multiple options, modeled as choices.
# These choices can be performed concurrently after 'Propose corrective actions'
change_policy = gen.activity('Change policy')
conduct_training = gen.activity('Conduct training')

optional_change_policy = gen.xor(change_policy, None)
optional_conduct_training = gen.xor(conduct_training, None)



final_model = gen.partial_order(dependencies=[
    (report_incident, log_report),
    (log_report, assign_report),
    (assign_report, identify_cause),
    (identify_cause, propose_corrective_actions),
    (propose_corrective_actions, implement_fix),
    (propose_corrective_actions, optional_change_policy),
    (propose_corrective_actions, optional_conduct_training),
    (implement_fix, conduct_follow_up),
    (optional_change_policy, conduct_follow_up),
    (optional_conduct_training, conduct_follow_up),

    (conduct_follow_up, close_incident_report),
    (close_incident_report, notify_stakeholders)])