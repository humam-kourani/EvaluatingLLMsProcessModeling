from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Initial steps
customer_searches_for_ticket = gen.activity('Customer searches for ticket')
select_route = gen.activity('Select route')
select_date_and_time = gen.activity('Select date and time')
provide_personal_information = gen.activity('Provide personal information')
provide_payment_details = gen.activity('Provide payment details')

# Ticket generation and sending
generate_ticket = gen.activity('Generate ticket')
send_ticket_via_email = gen.activity('Send ticket via email')
send_ticket_via_sms = gen.activity('Send ticket via SMS')
send_ticket = gen.xor(send_ticket_via_email, send_ticket_via_sms)

# Concurrent database update
update_seat_inventory = gen.activity('Update seat inventory')

# Pre-travel reminders and instructions
send_reminder = gen.activity('Send reminder')
send_instructions = gen.activity('Send instructions')
pre_travel_communications = gen.partial_order(dependencies=[(send_reminder,), (send_instructions,)])  # Concurrent reminders/instructions
optional_pre_travel_communications = gen.xor(pre_travel_communications, None)  # Optional

# Core journey completion
customer_completes_journey = gen.activity('Customer completes journey')

# Optional post-travel activities
post_travel_feedback_or_services = gen.activity('Post-travel feedback or services')
optional_post_travel = gen.xor(post_travel_feedback_or_services, None)

# Combine the sub-models

# Main process flow
main_process = gen.partial_order(
    dependencies=[
        (customer_searches_for_ticket, select_route),
        (select_route, select_date_and_time),
        (select_date_and_time, provide_personal_information),
        (provide_personal_information, provide_payment_details),
        (provide_payment_details, generate_ticket),
        (generate_ticket, send_ticket),
        (generate_ticket, update_seat_inventory),  # Concurrent ticket sending and inventory update
        (send_ticket, optional_pre_travel_communications),
        (optional_pre_travel_communications, customer_completes_journey),
        (customer_completes_journey, optional_post_travel)

    ]
)


final_model = main_process