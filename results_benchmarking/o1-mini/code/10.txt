from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Define activities
submit_request = gen.activity('Submit IT solution request')
assess_compatibility = gen.activity('Assess compatibility')
evaluate_cost = gen.activity('Evaluate cost and resource needs')
procure_tools = gen.activity('Procure necessary tools or licenses')
install_solution = gen.activity('Install the solution')
test_solution = gen.activity('Test solution')
roll_out = gen.activity('Roll out solution to requesting department')
provide_training = gen.activity('Provide training')
provide_support = gen.activity('Provide support for troubleshooting')

# Define optional 'Provide training'
provide_training_optional = gen.xor(provide_training, None)

# Define the 'proceed' path dependencies
dependencies_proceed = [
    (procure_tools, install_solution),
    (install_solution, test_solution),
    (test_solution, roll_out),
    (roll_out, provide_support),
    (roll_out, provide_training_optional)
]
proceed_path = gen.partial_order(dependencies=dependencies_proceed)

# Define the choice after 'Evaluate cost and resource needs'
choice_approve = gen.xor(proceed_path, None)

# Define the initial sequence dependencies
dependencies_initial = [
    (submit_request, assess_compatibility),
    (assess_compatibility, evaluate_cost),
    (evaluate_cost, choice_approve)
]
initial_sequence = gen.partial_order(dependencies=dependencies_initial)

# Assign the final model
final_model = initial_sequence