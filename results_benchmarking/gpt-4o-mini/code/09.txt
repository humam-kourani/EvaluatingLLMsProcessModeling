from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Activities
identify_idea = gen.activity('Identify idea for new product or improvement')
conduct_initial_research = gen.activity('Conduct initial research')
conduct_feasibility_studies = gen.activity('Conduct feasibility studies')
draft_design_concepts = gen.activity('Draft design concepts')
select_promising_design = gen.activity('Select promising design')
build_prototype_copy_1 = gen.activity('Build prototype')  # First instance
build_prototype_copy_2 = gen.activity('Build prototype')  # Second instance

# Create copies for testing activities to avoid reuse errors
test_functionality_copy_1 = gen.activity('Test functionality')
test_safety_copy = gen.activity('Test safety')
test_market_potential_copy = gen.activity('Test market potential')
collect_feedback = gen.activity('Collect feedback from testing phase')
refine_prototype = gen.activity('Refine prototype')
approve_prototype = gen.activity('Approve prototype for further development')
discard_prototype = gen.activity('Discard prototype')

# Sequence of activities
initial_research = gen.partial_order(dependencies=[
    (conduct_initial_research, conduct_feasibility_studies),
    (conduct_feasibility_studies, draft_design_concepts),
    (draft_design_concepts, select_promising_design),
    (select_promising_design, build_prototype_copy_1),  # Use first instance
])

# Testing phase with feedback and refinement loop
feedback_poset = gen.partial_order(dependencies=[
    (test_functionality_copy_1, collect_feedback),
    (test_safety_copy, collect_feedback),
    (test_market_potential_copy, collect_feedback),
    (collect_feedback, refine_prototype)
])

# Create separate copies for the loop
test_functionality_copy_2 = gen.activity('Test functionality')  # Third instance for the loop

# Loop for re-testing if refinement is needed
retest_loop = gen.loop(do=feedback_poset, redo=test_functionality_copy_2)

# Final decision to approve or discard the prototype
final_decision = gen.xor(approve_prototype, discard_prototype)

# Complete process model
final_model = gen.partial_order(dependencies=[
    (identify_idea, initial_research),
    (initial_research, build_prototype_copy_2),  # Use second instance
    (build_prototype_copy_2, retest_loop),
    (retest_loop, final_decision)
])