from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Define activities
define_objectives = gen.activity('Define campaign objectives')
select_channels = gen.activity('Select promotion channels')
create_content = gen.activity('Create content')
design_visuals = gen.activity('Design visuals')
launch_campaign = gen.activity('Launch campaign')
track_performance = gen.activity('Track performance in real-time')
collect_leads = gen.activity('Collect leads in CRM system')
follow_up_leads = gen.activity('Sales teams follows up on leads')
campaign_ends = gen.activity('Campaign period ends')
analyze_performance = gen.activity('Analyze performance for future optimization')

# Define submodels
content_submodel = gen.partial_order(dependencies=[(create_content, design_visuals)])
promotion_submodel = gen.partial_order(dependencies=[(define_objectives, select_channels)])
campaign_submodel = gen.partial_order(dependencies=[(promotion_submodel, content_submodel), (promotion_submodel, launch_campaign), (launch_campaign, track_performance), (track_performance, collect_leads), (collect_leads, follow_up_leads), (campaign_ends, analyze_performance)])

# Define final model
final_model = gen.partial_order(dependencies=[(campaign_submodel,)])