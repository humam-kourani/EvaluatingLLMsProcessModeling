from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Activities
guest_calls = gen.activity('Guest calls room service')
manager_takes_order = gen.activity('Manager takes down the order')
manager_submits_ticket = gen.activity('Manager submits order ticket to kitchen')
manager_gives_sommelier_order = gen.activity('Manager gives order to sommelier')
kitchen_prepares_food = gen.activity('Kitchen prepares food')
sommelier_fetches_wine = gen.activity('Sommelier fetches wine and prepares alcoholic beverages')
waiter_readies_cart = gen.activity('Waiter readies cart')
waiter_prepares_nonalcoholic_drinks = gen.activity('Waiter prepares nonalcoholic drinks')
waiter_delivers_order = gen.activity('Waiter delivers order to guest\'s room')
waiter_returns_to_station = gen.activity('Waiter returns to room-service station')
waiter_debits_account = gen.activity('Waiter debits guest\'s account')
waiter_waits_to_debit = gen.activity('Waiter waits/delays debiting')
manager_assigns_order = gen.activity('Manager assigns order to waiter')

# Concurrency and Sequential Dependencies
concurrent_kitchen_sommelier = gen.partial_order(dependencies=[(kitchen_prepares_food,), (sommelier_fetches_wine,)])
concurrent_waiter_kitchen_sommelier = gen.partial_order(dependencies=[(waiter_readies_cart,), (waiter_prepares_nonalcoholic_drinks,), concurrent_kitchen_sommelier])

# Sequential Dependencies
manager_seq = gen.partial_order(dependencies=[(guest_calls, manager_takes_order), (manager_takes_order, manager_submits_ticket),
                                              (manager_submits_ticket, manager_gives_sommelier_order), (manager_gives_sommelier_order, manager_assigns_order)])

# Combining Sequential and Concurrent Dependencies
concurrent_manager_waiter = gen.partial_order(dependencies=[manager_seq, concurrent_waiter_kitchen_sommelier])

# Waiter Delivers Order
waiter_delivers = gen.partial_order(dependencies=[(waiter_delivers_order, waiter_returns_to_station)])

# Waiter Debits Account
waiter_debits = gen.xor(waiter_debits_account, waiter_waits_to_debit)

# Final Model
final_model = gen.partial_order(dependencies=[(concurrent_manager_waiter, waiter_delivers), (waiter_delivers, waiter_debits)])