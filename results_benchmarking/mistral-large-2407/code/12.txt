from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Define activities
identify_needs = gen.activity('Identify development needs or career aspirations')
create_plan = gen.activity('Create personal development plan')
work_on_skills = gen.activity('Work on skill enhancement')
receive_feedback = gen.activity('Receive feedback and evaluation from supervisors')
consider_promotion = gen.activity('Consider employee for promotion or new role')
conduct_review = gen.activity('Conducts formal performance review')
approve_promotion = gen.activity('Approve promotion')
adjust_compensation = gen.activity('Adjust compensation')
set_responsibilities = gen.activity('Set new responsibilities')
transition_role = gen.activity('Transition into new role')

# Define dependencies for skill enhancement
poset_skill_enhancement = gen.partial_order(
    dependencies=[(work_on_skills, receive_feedback), (receive_feedback, consider_promotion.copy())]
)

# Define dependencies for promotion process
poset_promotion = gen.partial_order(
    dependencies=[
        (consider_promotion, conduct_review),
        (conduct_review, approve_promotion),
        (approve_promotion, adjust_compensation),
        (adjust_compensation, set_responsibilities),
        (set_responsibilities, transition_role)
    ]
)

# Combine all activities into a single model
final_model = gen.partial_order(
    dependencies=[
        (identify_needs, create_plan),
        (create_plan, poset_skill_enhancement),
        (poset_skill_enhancement, poset_promotion)
    ]
)