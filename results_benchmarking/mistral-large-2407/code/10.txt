from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Define activities
submit_request = gen.activity('Submit IT solution request')
assess_compatibility = gen.activity('Assess compatibility')
evaluate_cost = gen.activity('Evaluate cost and resource needs')
procure_tools = gen.activity('Procure necessary tools or licenses')
install_solution = gen.activity('Install the solution')
test_solution = gen.activity('Test solution')
roll_out_solution = gen.activity('Roll out solution to requesting department')
provide_training = gen.activity('Provide training')
provide_support = gen.activity('Provide support for troubleshooting')

# Combine initial assessment activities
assessment_poset = gen.partial_order(dependencies=[(assess_compatibility, evaluate_cost)])

# Define the approval process using xor for optional paths
approval_choice = gen.xor(assessment_poset, None)

# Define the procurement and installation process
procurement_poset = gen.partial_order(dependencies=[(procure_tools, install_solution), (install_solution, test_solution)])

# Define the rollout and training process
rollout_training_poset = gen.partial_order(dependencies=[(roll_out_solution, provide_training), (roll_out_solution, provide_support)])

# Define the full process using partial orders
final_model = gen.partial_order(dependencies=[
    (submit_request, approval_choice),
    (approval_choice, procurement_poset),
    (procurement_poset, rollout_training_poset)
])