from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Define activities
submit_request = gen.activity('Submit IT solution request')
assess_compatibility = gen.activity('Assess compatibility with existing systems')
evaluate_cost = gen.activity('Evaluate cost and resource needs')
procure_tools = gen.activity('Procure necessary tools or licenses')
install_solution = gen.activity('Install the solution')
test_solution = gen.activity('Test solution in a controlled environment')
roll_out_solution = gen.activity('Roll out solution to requesting department')
provide_training = gen.activity('Provide training')
provide_support = gen.activity('Provide support for troubleshooting')

# Define the main approval and procurement loop
assessment = gen.partial_order(dependencies=[(submit_request, assess_compatibility), (assess_compatibility, evaluate_cost)])
approval_and_procurement = gen.xor(assessment, None)  # The assessment part is optional
procurement_loop = gen.loop(do=procure_tools, redo=None)

# Define the installation, testing, and rollout sequence
installation_and_testing = gen.partial_order(dependencies=[(procurement_loop, install_solution), (install_solution, test_solution)])
rollout = gen.xor(installation_and_testing, None)  # The installation and testing are optional

# Define the training and support activities
training_and_support = gen.partial_order(
    dependencies=[(roll_out_solution, provide_training), (roll_out_solution, provide_support)]
)

# Combine all parts into the final model
final_model = gen.partial_order(
    dependencies=[
        (approval_and_procurement, rollout),
        (rollout, training_and_support)
    ]
)