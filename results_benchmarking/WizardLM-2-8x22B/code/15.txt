from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Define activities
schedule_audit = gen.activity('Schedule compliance audit')
prepare_docs = gen.activity('Prepare documentation')
gather_evidence = gen.activity('Gather evidence')
conduct_self_assessment = gen.activity('Conduct self-assessment')
conduct_external_audit = gen.activity('Conduct external audit')
identify_gaps = gen.activity('Identify gaps or issues')
make_corrections = gen.activity('Make necessary corrections or improvements')
conduct_final_audit = gen.activity('Conduct final audit')
award_certification = gen.activity('Award certification')
issue_official_docs = gen.activity('Issue official documents')

# Define the exclusive choice for the external audit results
external_audit_results = gen.xor(
    gen.partial_order(dependencies=[(make_corrections, conduct_final_audit)]),
    None
)

# Define the partial order for the preparation phase
preparation_phase = gen.partial_order(dependencies=[
    (prepare_docs, conduct_self_assessment),
    (gather_evidence, conduct_self_assessment),
    (conduct_self_assessment, conduct_external_audit)
])

# Define the partial order for the post-audit phase
post_audit_phase = gen.partial_order(dependencies=[
    (identify_gaps, external_audit_results),
    (external_audit_results, award_certification),
    (award_certification, issue_official_docs)
])

# Combine the preparation phase with the post-audit phase
final_model = gen.partial_order(
    dependencies=[(schedule_audit, preparation_phase), (preparation_phase, post_audit_phase)]
)