from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Define the activities
receive_inquiry = gen.activity('Receive customer inquiry')
collect_information = gen.activity('Collect customer information')
address_concerns = gen.activity('Address customer concerns or questions')
guide_selection = gen.activity('Guide customer in selecting product/service')
provide_quote = gen.activity('Provide quote')
place_order = gen.activity('Place order')
record_order = gen.activity('Record order in system')
send_confirmation = gen.activity('Send order confirmation to customer')

# Parallel part for collecting information and addressing concerns
parallel_info_concerns = gen.partial_order(dependencies=[(collect_information,), (address_concerns,)])

# Optional step for guiding the customer through product/service selection
optional_selection = gen.xor(guide_selection, None)

# XOR choice for customer approval of the quote
approval_choice = gen.xor(provide_quote, None)

# Sequential dependencies for placing the order, recording it, and sending confirmation
order_sequence = gen.partial_order(dependencies=[(place_order, record_order), (record_order, send_confirmation)])

# Combine all steps into the final model
final_model = gen.partial_order(dependencies=[
    (receive_inquiry, parallel_info_concerns),
    (parallel_info_concerns, optional_selection),
    (optional_selection, approval_choice),
    (approval_choice, order_sequence)
])