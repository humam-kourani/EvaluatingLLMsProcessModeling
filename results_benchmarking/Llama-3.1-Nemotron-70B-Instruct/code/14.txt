from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
outline_objectives = gen.activity('Outline objectives')
draft_plan = gen.activity('Draft plan')
conduct_strategic_alignment_meeting = gen.activity('Conduct strategic alignment meeting')
review_budget_feasibility = gen.activity('Review budget feasibility')
adjust_plan = gen.activity('Adjust Plan')
documented_and_approve_adjustment = gen.activity('Documented and approve adjustment')
approve_final_budget = gen.activity('Approve final budget')
distribute_budget = gen.activity('Distribute budget')
implement_plan = gen.activity('Implement plan')
provide_feedback = gen.activity('Provide feedback')

# Adjustment Loop
adjustment_loop = gen.loop(do=gen.partial_order(dependencies=[(adjust_plan, documented_and_approve_adjustment),
                                                              (documented_and_approve_adjustment, provide_feedback)]),
                            redo=None)

# Review and Adjustment Poset
review_adjustment_poset = gen.partial_order(dependencies=[(conduct_strategic_alignment_meeting, review_budget_feasibility),
                                                          (review_budget_feasibility, adjustment_loop),
                                                          (adjustment_loop, approve_final_budget)])

# Main Process Poset
main_process_poset = gen.partial_order(dependencies=[(outline_objectives, draft_plan),
                                                      (draft_plan, review_adjustment_poset),
                                                      (review_adjustment_poset, distribute_budget),
                                                      (distribute_budget, implement_plan)])

final_model = main_process_poset