from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Initial activities
identify_needs = gen.activity('Identify development needs or career aspirations')
create_plan = gen.activity('Create personal development plan')

# Concurrent activities
enhance_skills = gen.activity('Work on skill enhancement')
receive_feedback = gen.activity('Receive feedback and evaluation from supervisors')
concurrent_activities = gen.partial_order(dependencies=[(enhance_skills,), (receive_feedback,)])

# Consideration and review
consider_promotion = gen.activity('Consider employee for promotion or new role')
formal_review = gen.activity('Conducts formal performance review')

# Promotion activities
approve_promotion = gen.activity('Approve promotion')
set_responsibilities = gen.activity('Set new responsibilities')
adjust_compensation = gen.activity('Adjust compensation')
promotion_activities = gen.partial_order(dependencies=[(set_responsibilities,), (adjust_compensation,)])

# Final activity
transition = gen.activity('Transition into new role')

# Combine all activities into the final model
final_model = gen.partial_order(dependencies=[
    (identify_needs, create_plan),
    (create_plan, concurrent_activities),
    (concurrent_activities, consider_promotion),
    (consider_promotion, formal_review),
    (formal_review, approve_promotion),
    (approve_promotion, promotion_activities),
    (promotion_activities, transition)
])