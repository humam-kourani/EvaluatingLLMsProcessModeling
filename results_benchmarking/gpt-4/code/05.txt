from utils.model_generation import ModelGenerator

# Initialize model generator
gen = ModelGenerator()

# Define activities
identify_need = gen.activity('Identify need for new supplier or vendor')
issue_rfp = gen.activity('Issue request for proposals (RFP)')
receive_proposals = gen.activity('Receive supplier proposals')
evaluate_proposals = gen.activity('Evaluate proposal')
conduct_site_visit = gen.activity('Conduct site visit')
conduct_interview = gen.activity('Conduct interview')
select_supplier = gen.activity('Select supplier')
begin_negotiations = gen.activity('Begin contract negotiations')
sign_contract = gen.activity('Sign contract')
execute_contract = gen.activity('Execute contract')
execute_contract_copy = execute_contract.copy()  # Create a copy for reuse
onboard_supplier = gen.activity('Onboard supplier')

# Define process flow
evaluation_phase = gen.partial_order(dependencies=[(evaluate_proposals,), (conduct_site_visit,), (conduct_interview,)])
selection_to_execution = gen.partial_order(dependencies=[(select_supplier, begin_negotiations), (begin_negotiations, sign_contract), (sign_contract, execute_contract)])
final_steps = gen.partial_order(dependencies=[(execute_contract_copy, onboard_supplier)])

# Construct final model
final_model = gen.partial_order(
    dependencies=[(identify_need, issue_rfp), 
                  (issue_rfp, receive_proposals),
                  (receive_proposals, evaluation_phase),
                  (evaluation_phase, selection_to_execution),
                  (selection_to_execution, final_steps)]
)