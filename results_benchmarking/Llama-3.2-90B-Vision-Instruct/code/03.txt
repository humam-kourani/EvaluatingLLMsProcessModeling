from utils.model_generation import ModelGenerator

gen = ModelGenerator()

check_current_inventory_level = gen.activity('Check current inventory level')
send_automatic_alert = gen.activity('Send an automated alert')
send_manual_alert = gen.activity('Send a manual alert')
alert_choice = gen.xor(send_automatic_alert, send_manual_alert)

place_order_with_suppliers = gen.activity('Place order with suppliers')
update_inventory_system_with_expected_delivery_dates = gen.activity('Update inventory system with expected delivery dates')
receive_stock = gen.activity('Receive stock')
inspect_stock_for_quality = gen.activity('Inspect stock for quality')
record_stock_in_system = gen.activity('Record stock in system')
place_stock_on_shelves = gen.activity('Place stock on shelves')
place_stock_in_storage = gen.activity('Place stock in storage')
update_inventory_levels = gen.activity('Update inventory levels')

storage_choice = gen.xor(place_stock_on_shelves, place_stock_in_storage)

partial_order_1 = gen.partial_order(
    dependencies=[(check_current_inventory_level, alert_choice),
                  (alert_choice, place_order_with_suppliers),
                  (place_order_with_suppliers, update_inventory_system_with_expected_delivery_dates),
                  (update_inventory_system_with_expected_delivery_dates, receive_stock),
                  (receive_stock, inspect_stock_for_quality),
                  (inspect_stock_for_quality, record_stock_in_system),
                  (record_stock_in_system, storage_choice),
                  (storage_choice, update_inventory_levels)])

final_model = partial_order_1