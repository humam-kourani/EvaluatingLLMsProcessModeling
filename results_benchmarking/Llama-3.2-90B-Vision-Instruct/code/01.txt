from utils.model_generation import ModelGenerator

gen = ModelGenerator()

receive_inquiry = gen.activity('Receive customer inquiry')
collect_info = gen.activity('Collect customer information')
address_concerns = gen.activity('Address customer concerns or questions')
guide_customer = gen.activity('Guide customer in selecting product/service')
provide_quote = gen.activity('Provide quote')
place_order = gen.activity('Place order')
record_order = gen.activity('Record order in system')
send_confirmation = gen.activity('Send order confirmation to customer')

# Initial customer handling
initial_handling = gen.partial_order(dependencies=[(receive_inquiry, collect_info), 
                                                    (receive_inquiry, address_concerns), 
                                                    (collect_info, guide_customer), 
                                                    (address_concerns, guide_customer)])

# Create a copy of guide_customer
guide_customer_copy = guide_customer.copy()

# Customer selection, quote, and order placement
post_selection = gen.partial_order(dependencies=[(guide_customer_copy, provide_quote),
                                                  (provide_quote, place_order),
                                                  (place_order, record_order),
                                                  (record_order, send_confirmation)])

# Final model
final_model = gen.partial_order(dependencies=[(initial_handling, post_selection)])