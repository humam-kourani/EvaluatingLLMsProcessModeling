from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Define activities
identify_need = gen.activity('Identify need for new supplier or vendor')
issue_rfp = gen.activity('Issue request for proposals (RFP)')
receive_proposals = gen.activity('Receive supplier proposals')
evaluate_proposal = gen.activity('Evaluate proposal')
conduct_site_visit = gen.activity('Conduct site visit')
conduct_interview = gen.activity('Conduct interview')
select_supplier = gen.activity('Select supplier')
begin_contract_negotiations = gen.activity('Begin contract negotiations')
sign_contract = gen.activity('Sign contract')
onboard_supplier = gen.activity('Onboard supplier')
execute_contract = gen.activity('Execute contract')

# Model concurrency for evaluation, site visit, and interview
evaluation_process = gen.partial_order(
    dependencies=[(evaluate_proposal, conduct_site_visit), (evaluate_proposal, conduct_interview),
                  (conduct_site_visit, select_supplier), (conduct_interview, select_supplier)])

# Combine the entire process
final_model = gen.partial_order(
    dependencies=[(identify_need, issue_rfp), (issue_rfp, receive_proposals), (receive_proposals, evaluation_process),
                  (evaluation_process, begin_contract_negotiations), (begin_contract_negotiations, sign_contract),
                  (sign_contract, onboard_supplier), (sign_contract, execute_contract)])

final_model  # This holds the POWL model of the process