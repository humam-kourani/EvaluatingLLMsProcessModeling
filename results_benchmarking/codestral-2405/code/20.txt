from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Define activities
guest_calls = gen.activity('Guest calls room service')
manager_takes_order = gen.activity('Manager takes down the order')
manager_submits_order = gen.activity('Manager submits order ticket to kitchen')
manager_submits_order_copy = manager_submits_order.copy()
manager_orders_sommelier = gen.activity('Manager gives order to sommelier')
manager_orders_sommelier_copy = manager_orders_sommelier.copy()
manager_assigns_order = gen.activity('Manager assigns order to waiter')
kitchen_prepares_food = gen.activity('Kitchen prepares food')
kitchen_prepares_food_copy = kitchen_prepares_food.copy()
sommelier_prepares_drinks = gen.activity('Sommelier fetches wine and prepare alcoholic beverages')
sommelier_prepares_drinks_copy = sommelier_prepares_drinks.copy()
waiter_readies_cart = gen.activity('Waiter readies cart')
waiter_readies_cart_copy = waiter_readies_cart.copy()
waiter_prepares_nonalcoholic_drinks = gen.activity('Waiter prepares nonalcoholic drinks')
waiter_prepares_nonalcoholic_drinks_copy = waiter_prepares_nonalcoholic_drinks.copy()
waiter_delivers_order = gen.activity('Waiter delivers order to guest\'s room')
waiter_returns_to_station = gen.activity('Waiter returns to room-service station')
waiter_debits_account = gen.activity('Waiter debits guest\'s account')
waiter_debits_account_copy = waiter_debits_account.copy()
waiter_waits_debiting = gen.activity('Waiter waits/delays debiting')

# Define partial orders
kitchen_sommelier_order = gen.partial_order(dependencies=[(manager_submits_order, kitchen_prepares_food), (manager_orders_sommelier, sommelier_prepares_drinks)])
waiter_preparation = gen.partial_order(dependencies=[(waiter_readies_cart, waiter_prepares_nonalcoholic_drinks)])
order_delivery = gen.partial_order(dependencies=[(kitchen_prepares_food_copy, waiter_delivers_order), (sommelier_prepares_drinks_copy, waiter_delivers_order), (waiter_prepares_nonalcoholic_drinks_copy, waiter_delivers_order), (waiter_readies_cart_copy, waiter_delivers_order)])

# Define main process
main_process = gen.partial_order(dependencies=[(guest_calls, manager_takes_order), (manager_takes_order, manager_submits_order_copy), (manager_takes_order, manager_orders_sommelier_copy), (manager_takes_order, manager_assigns_order), (manager_assigns_order, waiter_preparation), (waiter_preparation, order_delivery), (order_delivery, waiter_returns_to_station), (waiter_returns_to_station, waiter_debits_account_copy)])

# Define optional wait for waiter
optional_wait = gen.xor(waiter_waits_debiting, None)

# Define final model
final_model = gen.partial_order(dependencies=[(main_process, optional_wait), (optional_wait, waiter_debits_account)])