from utils.model_generation import ModelGenerator
gen = ModelGenerator(True, True)

# Define activities
identify_need = gen.activity('Identify need for new supplier or vendor')
issue_rfp = gen.activity('Issue request for proposals (RFP)')
receive_proposals = gen.activity('Receive supplier proposals')
evaluate_proposal = gen.activity('Evaluate proposal')
site_visit = gen.activity('Conduct site visit')
interview = gen.activity('Conduct interview')
select_supplier = gen.activity('Select supplier')
begin_negotiations = gen.activity('Begin contract negotiations')
sign_contract = gen.activity('Sign contract')
onboard_supplier = gen.activity('Onboard supplier')
execute_contract = gen.activity('Execute contract')

# Define subprocesses
site_visit_interview = gen.xor(site_visit, interview)
evaluation_process = gen.partial_order(dependencies=[(evaluate_proposal, site_visit_interview)])
proposal_process = gen.partial_order(dependencies=[(issue_rfp, receive_proposals), (receive_proposals, evaluation_process), (evaluation_process, select_supplier)])
select_supplier_copy = select_supplier.copy()
sign_contract_copy = sign_contract.copy()
negotiation_process = gen.partial_order(dependencies=[(select_supplier_copy, begin_negotiations), (begin_negotiations, sign_contract_copy)])
onboarding_process = gen.partial_order(dependencies=[(sign_contract_copy, onboard_supplier), (onboard_supplier, execute_contract)])

# Define the final model
final_model = gen.partial_order(dependencies=[(identify_need, proposal_process), (proposal_process, negotiation_process), (negotiation_process, onboarding_process)])