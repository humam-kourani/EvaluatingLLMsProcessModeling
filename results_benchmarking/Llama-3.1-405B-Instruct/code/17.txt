from utils.model_generation import ModelGenerator
gen = ModelGenerator()

place_order = gen.activity('Place order')
record_order_details = gen.activity('Record order details')
process_payment = gen.activity('Process payment')
notify_failed_payment = gen.activity('Notify about failed payment')
payment_choice = gen.xor(process_payment, notify_failed_payment)

check_stock_availability = gen.activity('Check stock availability')
initiate_back_order = gen.activity('Initiate back-order')
inform_customer_delay = gen.activity('Inform customer about delay')
receive_back_order = gen.activity('Receive back-order')
stock_choice = gen.xor(check_stock_availability, gen.partial_order(dependencies=[(initiate_back_order, inform_customer_delay), (inform_customer_delay, receive_back_order)]))

pick_items = gen.activity('Pick items from warehouse')
quality_control = gen.activity('Perform quality control checks')
gift_wrap = gen.activity('Gift wrap items')
package_items = gen.activity('Package items')
packaging_poset = gen.partial_order(dependencies=[(pick_items, quality_control), (quality_control, gift_wrap), (gift_wrap, package_items)])

prepare_shipping_documents = gen.activity('Prepare shipping documents and labels')
prepare_customs_documentation = gen.activity('Prepare documentation for international orders')
shipping_documents_choice = gen.xor(prepare_shipping_documents, prepare_customs_documentation)

dispatch_order = gen.activity('Dispatch order')
send_shipping_confirmation = gen.activity('Send shipping confirmation to customer')
update_inventory_levels = gen.activity('Update inventory levels')

confirm_delivery = gen.activity('Confirm delivery')
send_follow_up_email = gen.activity('Send follow-up email')
customer_reports_issue = gen.activity('Customer reports issue')
send_return_shipping_label = gen.activity('Send return shipping label')
receive_returned_items = gen.activity('Receive returned items')
inspect_returned_items = gen.activity('Inspect returned items')
process_refund = gen.activity('Process refund')
process_replacement = gen.activity('Process replacement')
returns_choice = gen.xor(process_refund, process_replacement)

fulfillment_poset = gen.partial_order(dependencies=[(stock_choice, packaging_poset), (packaging_poset, shipping_documents_choice), 
                                                  (shipping_documents_choice, dispatch_order), (dispatch_order, send_shipping_confirmation), 
                                                  (send_shipping_confirmation, update_inventory_levels), (update_inventory_levels, confirm_delivery), 
                                                  (confirm_delivery, send_follow_up_email), (send_follow_up_email, customer_reports_issue), 
                                                  (customer_reports_issue, send_return_shipping_label), (send_return_shipping_label, receive_returned_items), 
                                                  (receive_returned_items, inspect_returned_items), (inspect_returned_items, returns_choice)])

final_model = gen.partial_order(dependencies=[(place_order, record_order_details), (record_order_details, payment_choice), (payment_choice, fulfillment_poset)])